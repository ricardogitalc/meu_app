# Implementação de Autenticação JWT - Passo a Passo

1. Use a biblioteca jose para validar tokens jwt

2. Regras de rotas:

Rotas de autenticação: /login
Rotas protegidas: /dashboard
Rotas públicas: /

Usuário autenticado:
consegue acessar rotas públicas, ao tentar acessar rotas de autenticação é redirecionado para /dashboard

Usuário não autenticado:
consegue acessar rotas públicas, ao tentar acessar rotas protegidas é redirecionado para /login


3. Fluxo de Login

Usuário acessa página de login (/login)
Envia credenciais via POST /auth/login para o backend ou clica no botão google GET /auth/google
Backend valida credenciais GET /auth/login/callback ou GET /auth/google/callback
Frontend mostra erros ou sucesso vindo do backend

Se válido:
Armazena o token JWT com o nome "access_token" que o backend gerou em um cookie httpOnly
Atualiza o estado do usuário para autenticado

Se inválido:
Limpa cookie com o nome "access_token"
Mantém o estado do usuário para não autenticado


6. Endpoints Backend

Magic login
POST /auth/login - Valida credenciais e gera o magic link, o link envia para /auth/login/callback
GET /auth/login/callback - Valida token do magic link, Gera JWT de acesso

Google login
GET /auth/google - Redireciona para tela de login Google
GET /auth/google/callback - Recebe dados do usuário Google, Gera JWT de acesso